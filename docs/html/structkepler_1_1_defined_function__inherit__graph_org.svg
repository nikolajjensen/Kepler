<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (20230121.1956)
 -->
<!-- Title: kepler::DefinedFunction Pages: 1 -->
<svg width="167pt" height="688pt"
 viewBox="0.00 0.00 167.00 688.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 684)">
<title>kepler::DefinedFunction</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="3.5,-0.5 3.5,-145.5 155.5,-145.5 155.5,-0.5 3.5,-0.5"/>
<text text-anchor="middle" x="79.5" y="-133.5" font-family="Helvetica,sans-Serif" font-size="10.00">kepler::DefinedFunction</text>
<polyline fill="none" stroke="#666666" points="3.5,-126.5 155.5,-126.5"/>
<text text-anchor="middle" x="79.5" y="-114.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="3.5,-107.5 155.5,-107.5"/>
<text text-anchor="start" x="11.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DefinedFunction(Anonymous</text>
<text text-anchor="start" x="11.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">Function *function, std</text>
<text text-anchor="start" x="11.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">::ostream &amp;output_stream_)</text>
<text text-anchor="start" x="11.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~DefinedFunction()</text>
<text text-anchor="start" x="11.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Array operator()(const</text>
<text text-anchor="start" x="11.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Array &amp;alpha, const Array</text>
<text text-anchor="start" x="11.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;omega) override</text>
<text text-anchor="start" x="11.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Array operator()(const</text>
<text text-anchor="start" x="11.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Array &amp;omega) override</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="structkepler_1_1_operation.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="0,-182.5 0,-679.5 159,-679.5 159,-182.5 0,-182.5"/>
<text text-anchor="middle" x="79.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">kepler::Operation</text>
<polyline fill="none" stroke="#666666" points="0,-660.5 159,-660.5"/>
<text text-anchor="start" x="8" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SymbolTable * symbol</text>
<text text-anchor="start" x="8" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10.00">_table</text>
<polyline fill="none" stroke="#666666" points="0,-630.5 159,-630.5"/>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Operation(SymbolTable</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *symbol_table)</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;omega)</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::u32string &amp;omega)</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::u32string &amp;omega)</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const std::u32string</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;omega)</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Char &amp;alpha,</text>
<text text-anchor="start" x="8" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Char &amp;omega)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M79.5,-171.48C79.5,-162.39 79.5,-153.65 79.5,-145.39"/>
<polygon fill="none" stroke="#63b8ff" points="76,-171.23 79.5,-181.23 83,-171.23 76,-171.23"/>
</g>
</g>
</svg>
