<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (20230121.1956)
 -->
<!-- Title: kepler::Operation Pages: 1 -->
<svg width="167pt" height="985pt"
 viewBox="0.00 0.00 167.00 985.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 981)">
<title>kepler::Operation</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-486.5 159,-486.5 159,-0.5 0,-0.5"/>
<text text-anchor="middle" x="79.5" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">kepler::Operation</text>
<polyline fill="none" stroke="#666666" points="0,-467.5 159,-467.5"/>
<text text-anchor="middle" x="79.5" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-448.5 159,-448.5"/>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Operation(SymbolTable</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *symbol_table)</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;omega)</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Array &amp;alpha,</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::u32string &amp;omega)</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Number &amp;alpha,</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const std::u32string &amp;omega)</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const std::u32string</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;omega)</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const Number &amp;omega)</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const std::u32string</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;alpha, const Array &amp;omega)</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual Array operator</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">()(const Char &amp;alpha,</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const Char &amp;omega)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classkepler_1_1_symbol_table.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="8.5,-534.5 8.5,-976.5 150.5,-976.5 150.5,-534.5 8.5,-534.5"/>
<text text-anchor="middle" x="79.5" y="-964.5" font-family="Helvetica,sans-Serif" font-size="10.00">kepler::SymbolTable</text>
<polyline fill="none" stroke="#666666" points="8.5,-957.5 150.5,-957.5"/>
<text text-anchor="middle" x="79.5" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="8.5,-938.5 150.5,-938.5"/>
<text text-anchor="start" x="16.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SymbolTable()</text>
<text text-anchor="start" x="16.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SymbolTable(SymbolTable</text>
<text text-anchor="start" x="16.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"> *parent)</text>
<text text-anchor="start" x="16.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SymbolTable()</text>
<text text-anchor="start" x="16.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void attach_parent</text>
<text text-anchor="start" x="16.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">(SymbolTable *parent)</text>
<text text-anchor="start" x="16.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ bool contains(const</text>
<text text-anchor="start" x="16.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::u32string &amp;id)</text>
<text text-anchor="start" x="16.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="16.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ const T &amp; get(const</text>
<text text-anchor="start" x="16.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::u32string &amp;id)</text>
<text text-anchor="start" x="16.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const</text>
<text text-anchor="start" x="16.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SymbolType get_type</text>
<text text-anchor="start" x="16.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::u32string</text>
<text text-anchor="start" x="16.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;id) const</text>
<text text-anchor="start" x="16.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void set(const std</text>
<text text-anchor="start" x="16.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">::u32string &amp;id, const</text>
<text text-anchor="start" x="16.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Array &amp;value, bool locally</text>
<text text-anchor="start" x="16.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">_only=false)</text>
<text text-anchor="start" x="16.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void set(const std</text>
<text text-anchor="start" x="16.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">::u32string &amp;id, const</text>
<text text-anchor="start" x="16.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Operation_ptr &amp;value,</text>
<text text-anchor="start" x="16.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bool locally_only=false)</text>
<text text-anchor="start" x="16.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void set(const std</text>
<text text-anchor="start" x="16.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">::u32string &amp;id, const</text>
<text text-anchor="start" x="16.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Number &amp;value, bool locally</text>
<text text-anchor="start" x="16.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">_only=false)</text>
<text text-anchor="start" x="16.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void remove(const std</text>
<text text-anchor="start" x="16.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">::u32string &amp;id, bool</text>
<text text-anchor="start" x="16.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> locally_only=false)</text>
<text text-anchor="start" x="16.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void bind_function</text>
<text text-anchor="start" x="16.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::u32string &amp;id)</text>
<text text-anchor="start" x="16.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void clear()</text>
<text text-anchor="start" x="16.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void strip_values()</text>
<text text-anchor="start" x="16.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void insert_system</text>
<text text-anchor="start" x="16.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">_parameters()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M79.5,-534.51C79.5,-522.83 79.5,-511.05 79.5,-499.27"/>
<polygon fill="none" stroke="#404040" points="79.5,-499.4 75.5,-493.4 79.5,-487.4 83.5,-493.4 79.5,-499.4"/>
<text text-anchor="middle" x="113" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00"> #symbol_table</text>
</g>
</g>
</svg>
